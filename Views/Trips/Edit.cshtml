@model TravelExpenseTracker.Domain.Trip
@using TravelExpenseTracker.Domain

@{
    ViewData["Title"] = "Edit Trip";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4 mt-3">
        <h1>Edit Trip</h1>
        <div>
            <a asp-area="" asp-controller="Trips" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">View Details</a>
            <a asp-area="" asp-controller="Trips" asp-action="Index" class="btn btn-outline-secondary">Back to Trips</a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <input asp-for="Id" type="hidden" />
                <input asp-for="UserId" type="hidden" />
                <input asp-for="CreatedAt" type="hidden" />

                <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" placeholder="e.g., Business Trip to NYC" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the purpose and details of your trip"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Destination" class="form-label"></label>
                    <input asp-for="Destination" class="form-control" placeholder="e.g., New York, NY" />
                    <span asp-validation-for="Destination" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="StartDate" class="form-label"></label>
                            <input asp-for="StartDate" type="date" class="form-control" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="EndDate" class="form-label"></label>
                            <input asp-for="EndDate" type="date" class="form-control" />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="mb-4 d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary">Update Trip</button>
                    <a asp-area="" asp-controller="Trips" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>

        <div class="col-lg-4">
            <div class="bg-light p-3 rounded mb-3">
                <h6>Trip Information</h6>
                <p class="small mb-2"><strong>Created:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy")</p>
                <p class="small mb-2"><strong>Total Expenses:</strong> @Model.TotalExpenses.ToString("C")</p>
                <p class="small mb-0"><strong>Number of Expenses:</strong> @Model.Expenses.Count</p>
            </div>

            <div class="bg-warning bg-opacity-10 border border-warning p-3 rounded">
                <h6 class="text-warning">Important Notes</h6>
                <ul class="small mb-0">
                    <li>Changing dates may affect existing expense reports</li>
                    <li>Make sure all expenses fall within the trip date range</li>
                    <li>Expense records will remain unchanged after editing trip details</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const startDate = document.getElementById('@Html.IdFor(m => m.StartDate)');
            const endDate = document.getElementById('@Html.IdFor(m => m.EndDate)');

            // Validate end date is not before start date
            function validateDates() {
                if (startDate.value && endDate.value) {
                    const start = new Date(startDate.value);
                    const end = new Date(endDate.value);

                    if (end < start) {
                        alert('End date cannot be before start date.');
                        return false;
                    }
                }
                return true;
            }

            startDate.addEventListener('change', validateDates);
            endDate.addEventListener('change', validateDates);

            // Validate form before submission
            document.querySelector('form').addEventListener('submit', function(e) {
                if (!validateDates()) {
                    e.preventDefault();
                }
            });
        });
    </script>
}